{"version":3,"sources":["components/topbar/Topbar.jsx","components/conversations/Conversations.js","components/messages/Messages.js","components/chatonline/Chatonline.js","helpers/comman_helper.js","pages/messanger/Messanger.js"],"names":["Topbar","className","to","style","textDecoration","src","alt","Conversations","conversations","useState","Messages","message","own","text","Date","createdAt","toDateString","ChatOnline","Host","window","location","host","Endpoints","getUserInfo","JSON","parse","localStorage","getItem","Messanger","setLoader","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessages","setNewMessages","arrivalMessage","setArrivalMessage","error","setError","scrollRef","useRef","socket","getConversations","a","url","data","_id","axios","get","result","console","log","getMessages","title","handleSubmit","e","preventDefault","sender","conversationId","recevierId","members","find","member","current","emit","senderId","post","useEffect","on","users","scrollIntoView","behavior","io","includes","prev","placeholder","map","c","onClick","length","m","ref","type","name","defaultValue","onChange","target","value"],"mappings":"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","file":"static/js/4.65ba5a28.chunk.js","sourcesContent":["import \"./topbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Search, Person, Chat, Notifications } from \"@material-ui/icons\";\r\n\r\nexport default function Topbar() {\r\n    return (\r\n        <div className=\"topbarContainer\">\r\n            <div className=\"topbarLeft\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                    <span className=\"logo\">Chat Now</span>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"topbarCenter\">\r\n\r\n            </div>\r\n            <div className=\"topbarRight\">\r\n                <div className=\"topbarLinks\">\r\n                    <span className=\"topbarLink\"></span>\r\n                    <span className=\"topbarLink\"></span>\r\n                </div>\r\n                <div className=\"topbarIcons\">\r\n                    <div className=\"topbarIconItem\">\r\n                        <span className=\"\"></span>\r\n                    </div>\r\n                    <div className=\"topbarIconItem\">\r\n                        <span className=\"\"></span>\r\n                    </div>\r\n                    <div className=\"topbarIconItem\">\r\n                        <span className=\"\"></span>\r\n                    </div>\r\n                </div>\r\n                <Link to={`/profile/rahulmore`}>\r\n                    <img\r\n                        src=\"https://lh3.googleusercontent.com/ogw/ADea4I708VJFYx3XKTF8u0dK-w-WsiENrtFo3h5q5flbpbM=s32-c-mo\"\r\n                        alt=\"Rahul More\"\r\n                        className=\"topbarImg\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n        </div >\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport './conversations.css'\r\nexport default function Conversations({ conversations }) {\r\n    const [user, setUser] = useState(null);\r\n\r\n    // const getUser = async () => {\r\n    //     var url = \r\n    // }\r\n    // useEffect(() => {\r\n    //     getUser\r\n\r\n    // }, [])\r\n    return (\r\n        <>\r\n            <div className=\"conversation\">\r\n                <img src=\"https://avatars.githubusercontent.com/u/25549118?v=4\" alt=\"Rahul More\" className=\"conversationImage\" />\r\n                <span className=\"conversationName\">Rahul More</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './messages.css'\r\nexport default function Messages({ message, own }) {\r\n\r\n    return (\r\n        <>\r\n            <div className={own ? 'messages own' : 'messages'}>\r\n                <div className=\"messageTop\">\r\n                    <img className=\"messageImage\" src=\"https://avatars.githubusercontent.com/u/25549118?v=4\" alt=\"Message Images\" />\r\n                    <p className=\"messageText\">{message.text}</p>\r\n                </div>\r\n                <div className=\"messageBottom\">\r\n                    {new Date(message.createdAt).toDateString()}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './chatonline.css'\r\nexport default function ChatOnline() {\r\n    return (\r\n        <>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineFriend\">\r\n                    <div className=\"chatOnlineImageContainer\">\r\n                        <div className=\"chatOnlineImageContainer\">\r\n                            <img src=\"https://avatars.githubusercontent.com/u/25549118?v=4\" alt=\"Rahul More\" className=\"chatOnlineImage\" />\r\n\r\n                            <div className=\"chatOnlineBadge\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"chatOnlineName\">Rahul More</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","export const Host = window.location.host === 'localhost:3000' ? 'http://localhost:5256' : ''\r\nexport const Endpoints = {\r\n    conversations: \"/api/conversations\",\r\n    messages: \"/api/messages\"\r\n}\r\nexport const getUserInfo = () => {\r\n    return JSON.parse(localStorage.getItem('chat-app-token'))\r\n}\r\nexport const SocketURL = \"ws://localhost:8900\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport Topbar from '../../components/topbar/Topbar';\r\nimport './messanger.css';\r\nimport Conversations from '../../components/conversations/Conversations';\r\nimport Messages from '../../components/messages/Messages';\r\nimport ChatOnline from '../../components/chatonline/Chatonline';\r\nimport { Endpoints, getUserInfo, Host, SocketURL } from '../../helpers/comman_helper';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client'\r\nexport default function Messanger() {\r\n\r\n\r\n    // var userData = {\r\n    //     \"title\": \"Logged in successfully\",\r\n    //     \"error\": false,\r\n    //     \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhaHVsQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI2MTU3ZDQ0YTQ0ZWE3ZTNiYThhMGExMTIiLCJyb2xlIjowLCJleHAiOjE4NDkxNDcyMzEsImlhdCI6MTYzMzE0NzIzMX0.QWl6JaxbhrSW_2eQNg4HXvS6J5AUbcBvQRxuexjgVyI\",\r\n    //     \"data\": {\r\n    //         \"role\": 0,\r\n    //         \"history\": [],\r\n    //         \"_id\": \"6157d44a44ea7e3ba8a0a112\",\r\n    //         \"name\": \"rahul\",\r\n    //         \"email\": \"rahul@gmail.com\",\r\n    //         \"username\": \"rahulmore\",\r\n    //         \"status\": \"active\",\r\n    //         \"createdAt\": \"2021-10-02T03:38:50.655Z\",\r\n    //         \"updatedAt\": \"2021-10-02T03:38:50.655Z\",\r\n    //         \"__v\": 0\r\n    //     }\r\n    // }\r\n\r\n    // var userData = {\r\n\r\n    //     \"title\": \"Logged in successfully\",\r\n    //     \"error\": false,\r\n    //     \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlvZ2VzaEBnbWFpbC5jb20iLCJ1c2VyX2lkIjoiNjE1N2Q0Njk0NGVhN2UzYmE4YTBhMTE2Iiwicm9sZSI6MCwiZXhwIjoxODQ5MTc3OTUwLCJpYXQiOjE2MzMxNzc5NTB9.W3eB1wIYBP5n4C06fHFG7IrN7u0FnwxOe-lPzbnuhn8\",\r\n    //     \"data\": {\r\n    //         \"role\": 0,\r\n    //         \"history\": [],\r\n    //         \"_id\": \"6157d46944ea7e3ba8a0a116\",\r\n    //         \"name\": \"yogesh\",\r\n    //         \"email\": \"yogesh@gmail.com\",\r\n    //         \"username\": \"yogeshmore\",\r\n    //         \"status\": \"active\",\r\n    //         \"createdAt\": \"2021-10-02T03:39:21.644Z\",\r\n    //         \"updatedAt\": \"2021-10-02T03:39:21.644Z\",\r\n    //         \"__v\": 0\r\n    //     }\r\n    // }\r\n    // localStorage.setItem('chat-app-token', JSON.stringify(userData)); // convert JSON to string\r\n    const [loader, setLoader] = useState(false);\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [messages, setMessages] = useState(null);\r\n    const [newMessages, setNewMessages] = useState('');\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const [error, setError] = useState([]);\r\n    const scrollRef = useRef();\r\n    const socket = useRef();\r\n\r\n\r\n    const getConversations = async () => {\r\n        setLoader(true);\r\n        try {\r\n            var url = Host + Endpoints.conversations + \"/\" + getUserInfo().data._id\r\n            const result = await axios.get(url);\r\n            setConversations(result.data.data)\r\n        } catch (err) {\r\n            console.log(\"err ===> \" + err)\r\n        }\r\n        setLoader(false);\r\n    }\r\n    const getMessages = async () => {\r\n        setLoader(true);\r\n        try {\r\n            var url = Host + Endpoints.messages + \"/\" + currentChat?._id\r\n            const result = await axios.get(url);\r\n            if (result.data.error === true) {\r\n                console.log(result.data.title)\r\n            } else {\r\n                setMessages(result.data.data);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setLoader(false);\r\n    }\r\n    const isValid = () => {\r\n        if (newMessages === null || newMessages === '') {\r\n            setError({ message: 'Please enter a message' });\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (isValid()) {\r\n            setError({});\r\n            var message = {\r\n                sender: getUserInfo().data._id,\r\n                text: newMessages,\r\n                conversationId: currentChat._id\r\n            }\r\n            const recevierId = currentChat.members.find(member => member !== getUserInfo().data._id);\r\n\r\n            socket.current.emit(\"sendMessage\", {\r\n                senderId: getUserInfo().data._id,\r\n                recevierId,\r\n                text: newMessages\r\n            });\r\n\r\n            try {\r\n                var url = Host + Endpoints.messages\r\n                const result = await axios.post(url, message);\r\n                setMessages([...messages, result.data.data]);\r\n                setNewMessages('');\r\n            } catch (err) {\r\n                console.log('There is an error!');\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        socket.current?.emit(\"addUser\", getUserInfo().data);\r\n        socket.current?.on(\"getUsers\", users => {\r\n            console.log(\"users ===> \", users);\r\n        });\r\n    }, [getUserInfo().data]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, [messages]);\r\n    useEffect(() => {\r\n        getMessages();\r\n    }, [currentChat]);\r\n    useEffect(() => {\r\n        socket.current = io(SocketURL);\r\n        socket.current.on(\"getMessage\", data => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: data.createdAt\r\n            });\r\n        })\r\n    }, []);\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && setMessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage, currentChat])\r\n    useEffect(() => {\r\n        getConversations();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <div className=\"messanger\">\r\n                <div className=\"chatMenu\">\r\n                    <div className=\"chatMenuWrapper\">\r\n                        <input placeholder=\"Search for freinds...\" className=\"chatMenuInput\" />\r\n                        {\r\n                            conversations.map((c) => (\r\n                                <div onClick={() => setCurrentChat(c)}>\r\n                                    <Conversations conversations={c} />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatBox\">\r\n                    <div className=\"chatBoxWrapper\">\r\n                        {\r\n                            currentChat ? (\r\n                                <>\r\n                                    <div className=\"chatBoxTop\">\r\n                                        {\r\n                                            messages.length > 0 ? (\r\n                                                messages.map(m => (\r\n                                                    <div ref={scrollRef}>\r\n                                                        <Messages message={m} own={m.sender === getUserInfo().data._id} />\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : (\r\n                                                <span className=\"initConversation\">Start Chatting!</span>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"chatBoxBottom\">\r\n                                        <input type=\"text\" name=\"chat\" placeholder=\"Write what's on your mind?\" className=\"chatMessageInput\" defaultValue={newMessages} onChange={(e) => setNewMessages(e.target.value)} />\r\n                                        <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                                    </div>\r\n                                    <span className=\"text-danger\">{error.message}</span>\r\n                                </>\r\n                            ) : (\r\n                                <span className=\"noConversationText\">Choose conversation to start messaging!</span>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatOnline\">\r\n                    <div className=\"chatOnlineWrapper\">\r\n                        <ChatOnline />\r\n                        <ChatOnline />\r\n                        <ChatOnline />\r\n                        <ChatOnline />\r\n                        <ChatOnline />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}