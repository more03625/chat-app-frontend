{"version":3,"sources":["helpers/comman_helper.js","helpers/Protected.js","App.js","reportWebVitals.js","index.js"],"names":["Host","window","location","host","Endpoints","conversations","messages","signup","login","getUser","getUserInfo","JSON","parse","localStorage","getItem","process","SocketURL","logout","toast","success","removeItem","setTimeout","href","Protected","props","history","useHistory","Component","component","useEffect","push","Messanger","lazy","Login","Register","App","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6HAAA,sLAEaA,EAAgC,mBAAzBC,OAAOC,SAASC,KAA4B,wBAA0B,yCAC7EC,EAAY,CACrBC,cAAe,qBACfC,SAAU,gBACVC,OAAQ,qBACRC,MAAO,kBACPC,QAAS,qBAEAC,EAAc,WACvB,OAAOC,KAAKC,MAAMC,aAAaC,QAAQC,mBAE9BC,EAAqC,mBAAzBf,OAAOC,SAASC,KAA4B,sBAAwB,6CAEhFc,EAAS,WAClBC,IAAMC,QAAQ,4BACdN,aAAaO,WAAWL,iBACxBM,YAAW,WACPpB,OAAOC,SAASoB,KAAO,WACxB,O,sICEQC,EAnBG,SAACC,GACf,IAAMC,EAAUC,cAEZC,EAAYH,EAAMI,UAStB,OAPAC,qBAAU,WACgB,OAAlBnB,cACAe,EAAQK,KAAK,KAEbL,EAAQK,KAAK,YAElB,IAEC,mCACI,cAACH,EAAD,OCZNI,EAAYC,gBAAK,kBAAM,8DACvBC,EAAQD,gBAAK,kBAAM,uDACnBE,EAAWF,gBAAK,kBAAM,uDAsBbG,MApBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,yDAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CAAWV,UAAWK,MAExB,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,CAAWV,UAAWM,MAExB,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAWV,UAAWG,cCTnBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c96110e5.chunk.js","sourcesContent":["import toast from 'react-hot-toast';\r\n\r\nexport const Host = window.location.host === 'localhost:3000' ? 'http://localhost:5256' : 'https://chat-now-backend.herokuapp.com'\r\nexport const Endpoints = {\r\n    conversations: \"/api/conversations\",\r\n    messages: \"/api/messages\",\r\n    signup: \"/api/auth/register\",\r\n    login: \"/api/auth/login\",\r\n    getUser: \"/api/auth/getUser\"\r\n}\r\nexport const getUserInfo = () => {\r\n    return JSON.parse(localStorage.getItem(process.env.REACT_APP_AUTH_TOKEN_NAME))\r\n}\r\nexport const SocketURL = window.location.host === \"localhost:3000\" ? \"ws://localhost:8900\" : \"https://chat-now-socket.herokuapp.com:8900\"\r\n\r\nexport const logout = () => {\r\n    toast.success(\"Logged out successfully!\");\r\n    localStorage.removeItem(process.env.REACT_APP_AUTH_TOKEN_NAME);\r\n    setTimeout(function () {\r\n        window.location.href = '/login';\r\n    }, 2000);\r\n}","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getUserInfo } from './comman_helper';\r\nconst Protected = (props) => {\r\n    const history = useHistory();\r\n\r\n    let Component = props.component;\r\n\r\n    useEffect(() => {\r\n        if (getUserInfo() !== null) {\r\n            history.push(\"/\");\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Component />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Protected;","import React, { Suspense, lazy } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Protected from \"./helpers/Protected\";\r\n\r\nconst Messanger = lazy(() => import(\"./pages/messanger/Messanger\"));\r\nconst Login = lazy(() => import(\"./pages/auth/login/Login\"));\r\nconst Register = lazy(() => import(\"./pages/auth/register/Register\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Suspense fallback={<div>This is form fallback!</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/login\">\r\n            <Protected component={Login} />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Protected component={Register} />\r\n          </Route>\r\n          <Route exact path=\"/\" >\r\n            <Protected component={Messanger} />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}